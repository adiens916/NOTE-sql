-- 1. 없어진 기록 찾기

-- JOIN
-- https://programmers.co.kr/questions/19485
SELECT ANIMAL_OUTS.ANIMAL_ID, ANIMAL_OUTS.NAME
FROM ANIMAL_OUTS LEFT OUTER JOIN ANIMAL_INS
ON ANIMAL_OUTS.ANIMAL_ID = ANIMAL_INS.ANIMAL_ID
WHERE ANIMAL_INS.ANIMAL_ID IS NULL
ORDER BY ANIMAL_OUTS.ANIMAL_ID;

-- ON 대신에 USING으로 같은 것 지정 가능
-- https://programmers.co.kr/questions/19289
SELECT ANIMAL_OUTS.ANIMAL_ID, ANIMAL_OUTS.NAME
FROM ANIMAL_OUTS LEFT JOIN ANIMAL_INS
USING(ANIMAL_ID)
WHERE ANIMAL_INS.ANIMAL_ID IS NULL;

-- SUBQUERY
-- https://programmers.co.kr/questions/19289
SELECT ANIMAL_ID, NAME
FROM ANIMAL_OUTS
WHERE ANIMAL_ID NOT IN (
  SELECT ANIMAL_ID 
  FROM ANIMAL_INS
);

-- MINUS 사용 (차집합)
-- https://programmers.co.kr/questions/17752
SELECT ANIMAL_ID, NAME FROM ANIMAL_OUTS
MINUS
SELECT ANIMAL_ID, NAME FROM ANIMAL_INS


-- 2. 있었는데요 없었습니다.
-- 조건부 가능
SELECT 
    ANIMAL_OUTS.ANIMAL_ID, 
    ANIMAL_OUTS.NAME
FROM ANIMAL_OUTS JOIN ANIMAL_INS
ON ANIMAL_OUTS.ANIMAL_ID = ANIMAL_INS.ANIMAL_ID
WHERE ANIMAL_OUTS.DATETIME < ANIMAL_INS.DATETIME
ORDER BY ANIMAL_INS.DATETIME;


-- 3. 오랜 기간 보호한 동물 (1)
-- 입양을 못 감 = ANIMAL_ID가 ANIMAL_OUTS에 없음 = NULL
-- 가장 오래 있던 3마리 = 보호 시작일이 제일 빠른 3마리
SELECT 
    ANIMAL_INS.NAME, 
    ANIMAL_INS.DATETIME
FROM ANIMAL_INS LEFT OUTER JOIN ANIMAL_OUTS
ON ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID
WHERE ANIMAL_OUTS.ANIMAL_ID IS NULL
ORDER BY DATETIME
FETCH FIRST 3 ROW ONLY; -- MySQL => LIMIT 3


-- 4. 보호소에서 중성화한 동물
SELECT
    OUTS.ANIMAL_ID,
    OUTS.ANIMAL_TYPE,
    OUTS.NAME
FROM ANIMAL_OUTS OUTS INNER JOIN ANIMAL_INS INS
ON OUTS.ANIMAL_ID = INS.ANIMAL_ID
WHERE 
    INS.SEX_UPON_INTAKE LIKE 'Intact %' AND (
        OUTS.SEX_UPON_OUTCOME LIKE 'Neutered %' OR
        OUTS.SEX_UPON_OUTCOME LIKE 'Spayed %'
    );